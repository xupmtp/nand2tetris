// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 * 此題要顛倒思考方向，解題時從後面條件往前處理
 * 因前面的條件須覆蓋後面的條件(if成立時就不往下執行)
 * 故由後往前處理時便可用Mux覆蓋之前的值
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=o1, out=o11);
    Mux16(a=o1, b=o11, sel=inc, out=t1);
    Mux16(a=t1, b=in, sel=load, out=t2);
    Mux16(a=t2, b=false, sel=reset, out=t3);

    Or(a=reset, b=load, out=c1);
    Or(a=c1, b=inc, out=c2);

    Register(in=t3, load=c2, out=out, out=o1);
}
